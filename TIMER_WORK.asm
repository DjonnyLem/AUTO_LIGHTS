COUNT $372
;==========================================================
;счетчик, работающий от 0 до заданного числа
; предполагаем, что память очищена при инициализации и там нули
LDI	ZL, LOW(TIMER1)		; @0 ЗАПИСЫВАЕМ В Z АДРЕС ТАЙМЕРА
LDI ZH,	HIGH(TIMER1)	; @0 ЗАПИСЫВАЕМ В Z АДРЕС ТАЙМЕРА

LD R16, Z+				; ЗАПИСЫВАМ В РЕГИСТРЫ ЗНАЧЕНИЯ ИЗ ТАЙМЕРА
LD R17, Z+				; ЗАПИСЫВАМ В РЕГИСТРЫ ЗНАЧЕНИЯ ИЗ ТАЙМЕРА
LDI	XL, LOW(COUNT)		; @0 ЗАПИСЫВАЕМ В X АДРЕС ТАЙМЕРА
LDI XH,	HIGH(COUNT)	; @0 ЗАПИСЫВАЕМ В X АДРЕС ТАЙМЕРА

;СРАВНИВАЕМ ЗНАЧЕНИЯ ТАЙМЕРА С ЗАДАННЫМ ЧИСЛОМ, 
CPI R17, XH	;СРАВНИВАЕМ ВЕРХНЕЕ ЗНАЧЕНИЕ С 0
BRNE M3       	; не равно, значит счет уже идет
CPI R16, XL	;СРАВНИВАЕМ НИЖНЕЕ ЗНАЧЕНИЕ С 0
BRNE M3			; не равно нулю, значит счет уже идет

SUBI R16,(-1)		; + НИЖНЕЕ ЗНАЧЕНИЕ НА 1
SBCI R17,(-1)
;BRCS M3			;Перейти если перенос установлен, СЧЕТ ОКОНЧЕН

ST -Z, R16
ST -Z, R17
RJMP M4
M3:		;ОБНУЛЯЕМ СЧЕТЧИК
LDI R16, $00
LDI R16, $00
;НУЖНО ОЧИСТИТЬ ИЛИ ВЫСТАВИТЬ КОНКРЕТНЫЙ ФЛАГ ТАЙМЕРА
ST -Z, R16
ST -Z, R17
M4:
;НУЖНО ОЧИСТИТЬ ОБЩИЙ ФЛАГ ТАЙМЕРА
RJMP MAIN


;==========================================================

LDI	ZL, LOW(TIMER1)		; @0 ЗАПИСЫВАЕМ В Z АДРЕС ТАЙМЕРА
LDI ZH,	HIGH(TIMER1)	; @0 ЗАПИСЫВАЕМ В Z АДРЕС ТАЙМЕРА

LD R16, Z+				; ЗАПИСЫВАМ В РЕГИСТРЫ ЗНАЧЕНИЯ ИЗ ТАЙМЕРА
LD R17, Z+				; ЗАПИСЫВАМ В РЕГИСТРЫ ЗНАЧЕНИЯ ИЗ ТАЙМЕРА

;СРАВНИВАЕМ ЗНАЧЕНИЯ ТАЙМЕРА С FF, 
CPI R17, $FF	;СРАВНИВАЕМ ВЕРХНЕЕ ЗНАЧЕНИЕ С FF
BRNE M1       	; не равно нулю, значит счет уже идет
CPI R16, $FF	;СРАВНИВАЕМ НИЖНЕЕ ЗНАЧЕНИЕ С FF
BRNE M1			; не равно нулю, значит счет уже идет

;ИНАЧЕ ЗАПИСЫВАЕМ ПЕРВИЧНОЕ ЗНАЧЕНИЕ СЧЕТЧИКА
LDI R16, LOW(COUNT)  	;@1
LDI R17, HIGH(COUNT)	;@1

M1:
SUBI R16,1		; УМЕНЬШАЕМ НИЖНЕЕ ЗНАЧЕНИЕ НА 1
SBCI R17,0
BRCS M3			;Перейти если перенос установлен, СЧЕТ ОКОНЧЕН

ST -Z, R16
ST -Z, R17
RJMP M4
M3:		;ОБНУЛЯЕМ СЧЕТЧИК FF
LDI R16, $FF
LDI R16, $FF
;НУЖНО ОЧИСТИТЬ ИЛИ ВЫСТАВИТЬ КОНКРЕТНЫЙ ФЛАГ ТАЙМЕРА
ST -Z, R16
ST -Z, R17
M4:
;НУЖНО ОЧИСТИТЬ ОБЩИЙ ФЛАГ ТАЙМЕРА
RJMP MAIN


;INTERRUPT
	SBRS FL3, 0 

;TASKES
IN_ENGINE ;TASK1 ; ВКЛ.ДВЗ
	

;FL1-ФЛАГ ПРЕРЫВАНИЯ (ПРОИЗОШЛО ПРЕРЫВАНИЕ ПО ТАКОМУ ТО БИТУ)0 -РВ1(ENGINE), 1 -РВ2 (ГО), 3 -РВ3(РТ), 4 -РВ4(КНОПКА)
;FL2-ФЛАГ ДЕЙСТВИЯ	(ПОДТВЕРЖДЕНО ПРЕРЫВАНИЕ ПО ТАКОМУ ТО БИТУ)
;FL3-ФЛАГ ТАЙМЕРА	(ОБЩИЙ ТАЙМЕР И ТАЙМЕР КОНКРЕТНОГО СЧЕТА) 0 -ОБЩИЙ ТАЙМЕР, 1 - ТАЙМЕР 200МКС 2-ТАЙМЕР ШИМ, 3 ТАЙМЕР ВОЗРАСТ.ШИМ



MAIN:
	SBRS FL1, 0 ; Пропустить если бит ФЛАГ ПРЕРЫВАНИЙ в регистре очищен
	RCALL TASK1
	
	SBRС FL3, 0 ; Пропустить если бит ФЛАГ ТАЙМЕРА в регистре очищен
	RCALL TASK1
DELAY200:
	SBR FL3

TASK1 ;ПОДТВЕРЖДЕНИЕ ПРЕРЫВАНИЯ ЗАДЕРЖКОЙ 200МКС
;ЗАПРЕЩАЕМ ВНЕШНИЕ ПРЕРЫВАНИЯ
SBR FL3, 0; ВЫСТАВЛЯЕМ ФЛАГ
RET
;FLAG_1
;0 -ФЛАГ ВНЕШНЕГО ПРЕРЫВАНИЯ ДВЗ
;1 -ФЛАГ ВНЕШНЕГО ПРЕРЫВАНИЯ ГО
;2 -ФЛАГ ВНЕШНЕГО ПРЕРЫВАНИЯ РТ
;3 -ФЛАГ ВНЕШНЕГО ПРЕРЫВАНИЯ КН
;4
;5
;6
;7
;FLAG_2
;0 -ФЛАГ ОБЩЕГО ТАЙМЕРА
;1 -ФЛАГ ТАЙМЕРА ЗАДЕРЖКИ 200
;2 -ФЛАГ ТАЙМЕРА ЗАДЕРЖКИ 2000
;3 -ФЛАГ ТАЙМЕРА ШИМ 2000
;4
;5
;6
;7

MAIN:
SBRC FLAG_1, 0	;Пропустить если бит в регистре очищен/ 
RCALL TASK1		; ЕСЛИ БИТ УСТАНОВЛЕН, ВЫПОЛНЯЕМ ЗАДАЧУ






SBRC FLAG_1, 1	;Пропустить если бит в регистре очищен
RCALL TASK2

SBRC FLAG_1, 2	;Пропустить если бит в регистре очищен
RCALL TASK3

SBRC FLAG_1, 3	;Пропустить если бит в регистре очищен
RCALL TASK4

SBRC FLAG_2, 0	;Пропустить если бит в регистре очищен
RCALL TASK5

RJMP MAIN


TASK1:
;БЛОКИРУЕМ ВНЕШНИЕ ПРЕРЫВАНИЯ
SBRC FLAG_1, 4	;Пропустить если бит в регистре очищен
RJMP TASK6		; ЕСЛИ БИТ УСТАНОВЛЕН, ВЫПОЛНЯЕМ ЗАДАЧУ



TASK6:
;====================================================================	
PIC_STATUS:
	.BYTE	1

;====================================================================
;ОСНОВНОЕ ВНЕШНЕЕ ПРЕРЫВАНИЕ ПО РВ1
;
	CLI
;ПРЕРЫВАНИЕ ПОДТВЕРЖЕНИЯ ПОСЛЕ ЗАДЕРЖКИ? FLAG_1 BIT 4
	SBRC FLAG_1, 5 ; Пропустить если бит 4 в регистре FLAG_1 ОЧИЩЕН
	RJMP M11 ; ЕСЛИ УСТАНОВЛЕН, ТО ПРЫГАЕМ ПО МЕТКЕ ДЛЯ ПОДТВЕРЖДЕНИЯ ПРЕРЫВАНИЯ
	
	;ИНАЧЕ:
	;БЛОКИРУЕМ ПРЕРЫВАНИЯ
	;GIMSK– General Interrupt Mask Register Реестр масок прерываний
    LDI R16, 0<<INT0 | 0<<PCIE ;- INT0: запрос внешнего прерывания 0 разрешен;- PCIE: разрешение прерывания при смене вывода
    OUT GIMSK, R16

	;ВЫСТАВЛЯЕМ ФЛАГ ТАЙМЕРА ЗАДЕРЖКИ 200
	SBR FLAG_2, 2	;Установить бит 1 (биты) в регистре FLAG_2

	;СОХРАНЯЕМ ТЕКУЩЕЕ СОСТОЯНИЕ ПИНОВ PB1, PB2, PB3, PB4
	IN R16, PINB		;ЗАНОСИМ В РЕГИСТР TEMP ЗНАЧЕНИЯ ПОРТОВ B
	ANDI R16, 0b00011110	;МАСКОЙ ОЧИЩАЕМ ПОРТЫ В В 0, КРОМЕ РВ1, РВ2, РВ3, РВ4
 	LSL R16					; СМЕЩАЕМ ВЛЕВО ЗНАЧЕНИЯ НА 3 ЗНАКА
    LSL R16
    LSL R16
	ANDI FLAG_2 Ob00001111	;ОЧИЩАЕМ ЗНАЧЕНИЯ БИТОВ 7-4 ВО ФЛАГЕ
	OR FLAG_2,R16				;С ПОМОЩЬЮ МАСКИ ЗАПИСЫВАЕМ ВО ФЛАГ ЗНАЧЕНИЯ 7-4 С РЕГИСТРА, НЕ МЕНЯЯ ЗНАЧЕНИЯ 3-0
	STS RIC_STATUS, R16	; ПРЯМОЕ СОХРАНЕНИЕ	В ПАМЯТИ
	RJMP M12	;НА ВЫХОД ИЗ ПРЕРЫВАНИЯ
	

M11:   ;ПОДТВЕРЖДЕНИЕ ПРЕРЫВАНИЯ
	LDS R,16, RIC_STATUS	; ПРЯМАЯЗАГРУЗКА ИЗ ПАМЯТИ В R16
	IN R17, PINB		;ЗАНОСИМ В РЕГИСТР TEMP ЗНАЧЕНИЯ ПОРТОВ B
	ANDI R17, 0b00011110	;МАСКОЙ ОЧИЩАЕМ ПОРТЫ В В 0, КРОМЕ РВ1, РВ2, РВ3, РВ4
 	LSL R17					; СМЕЩАЕМ ВЛЕВО ЗНАЧЕНИЯ НА 3 ЗНАКА
    LSL R17
    LSL R17
	CP R16, R17
	BREQ M13	;Перейти если равно
	
	;ИНАЧЕ
	;РАЗРЕШАЕМ ПРЕРЫВАНИЯ
	;GIMSK– General Interrupt Mask Register Реестр масок прерываний
    LDI R16, 0<<INT0 | 1<<PCIE ;- INT0: запрос внешнего прерывания 0 разрешен;- PCIE: разрешение прерывания при смене вывода
    OUT GIMSK, R16
	RJMP M12	;НА ВЫХОД ИЗ ПРЕРЫВАНИЯ	
	
M13:
	ANDI FLAG_1 Ob00001111	;ОЧИЩАЕМ ЗНАЧЕНИЯ БИТОВ 7-4 ВО ФЛАГЕ
	OR FLAG_1,R17				;С ПОМОЩЬЮ МАСКИ ЗАПИСЫВАЕМ ВО ФЛАГ ЗНАЧЕНИЯ 7-4 С РЕГИСТРА, НЕ МЕНЯЯ ЗНАЧЕНИЯ 3-0
	;РАЗРЕШАЕМ ПРЕРЫВАНИЯ
	;GIMSK– General Interrupt Mask Register Реестр масок прерываний
    LDI R16, 0<<INT0 | 1<<PCIE ;- INT0: запрос внешнего прерывания 0 разрешен;- PCIE: разрешение прерывания при смене вывода
    OUT GIMSK, R16
	;НА ВЫХОД ИЗ ПРЕРЫВАНИЯ

M12:
	RETI



;===========================================================

ПРЕРЫВАНИЕ ПО ПЕРЕПОЛНЕНИЮ ТАЙМЕРА


	;ПРОВЕРЯЕМ ФЛАГИ ТАЙМЕРОВ
	SBRC FLAG_2, 2 ; Пропустить если бит 1 в регистре FLAG_2 ОЧИЩЕН
	RCALL M21 ; ЕСЛИ УСТАНОВЛЕН, ТО ПРЫГАЕМ ПО МЕТКЕ
	SBRC FLAG_1, 3 ; Пропустить если бит 2 в регистре FLAG_2 ОЧИЩЕН
	RJMP M22 ; ЕСЛИ УСТАНОВЛЕН, ТО ПРЫГАЕМ ПО МЕТКЕ
	SBRC FLAG_1, 4 ; Пропустить если бит 3 в регистре FLAG_2 ОЧИЩЕН
	RJMP M23 ; ЕСЛИ УСТАНОВЛЕН, ТО ПРЫГАЕМ ПО МЕТКЕ

	RJMP M24


M21:	;ОБРАБОТКА ЗАДЕРЖКИ 200 МКС
	LDI	ZL, LOW(TIMER1)		; @0 ЗАПИСЫВАЕМ В Z АДРЕС ТАЙМЕРА
	LDI ZH,	HIGH(TIMER1)	; @0 ЗАПИСЫВАЕМ В Z АДРЕС ТАЙМЕРА

	LD R16, Z+				; ЗАПИСЫВАМ В РЕГИСТРЫ ЗНАЧЕНИЯ ИЗ ТАЙМЕРА
	LD R17, Z+				; ЗАПИСЫВАМ В РЕГИСТРЫ ЗНАЧЕНИЯ ИЗ ТАЙМЕРА

	;СРАВНИВАЕМ ЗНАЧЕНИЯ ТАЙМЕРА С FF, 
	CPI R17, $FF	;СРАВНИВАЕМ ВЕРХНЕЕ ЗНАЧЕНИЕ С FF
	BRNE M1       	; не равно нулю, значит счет уже идет
	CPI R16, $FF	;СРАВНИВАЕМ НИЖНЕЕ ЗНАЧЕНИЕ С FF
	BRNE M1			; не равно нулю, значит счет уже идет

	;ИНАЧЕ ЗАПИСЫВАЕМ ПЕРВИЧНОЕ ЗНАЧЕНИЕ СЧЕТЧИКА
	LDI R16, LOW(COUNT)  	;@1
	LDI R17, HIGH(COUNT)	;@1
M211:
	SUBI R16,1		; УМЕНЬШАЕМ НИЖНЕЕ ЗНАЧЕНИЕ НА 1
	SBCI R17,0
	BRCS M213			;Перейти если перенос установлен, СЧЕТ ОКОНЧЕН
	ST -Z, R16
	ST -Z, R17
	RJMP M214
M213:		;ОБНУЛЯЕМ СЧЕТЧИК FF
	LDI R16, $FF
	LDI R16, $FF
	ST -Z, R16
	ST -Z, R17
	CBR FLAG_2, 2	;@2 Сбросить бит (биты) в регистре ФЛАГ ТАЙМЕРА
M214:
	RET	

M22:	;ОБРАБОТКА ЗАДЕРЖКИ 2000 МКС С ШИМ

	RET	

M23:	;ОБРАБОТКА ЗАДЕРЖКИ 2000 МКС

	RET
	
M24:	
	RETI

;============================


.MACRO TIMER_PROC ;ЗАПИСЬ TIMER_PROC @0-НОМЕР ТАЙМЕРА ЗАДЕРЖКИ, @1- НАИМЕНОВАНИЯ ЗНАЧЕНИЯ СЧЕТЧИКА, (@2)-ПОРЯДКОВЫЙ НОМЕР БИТА ФЛАГА FLAG_2 
	LDI	ZL, LOW(@0)		;(TIMER1)		; @0 ЗАПИСЫВАЕМ В Z АДРЕС ТАЙМЕРА
	LDI ZH,	HIGH(@0)	;(TIMER1)		; @0 ЗАПИСЫВАЕМ В Z АДРЕС ТАЙМЕРА

	LD R16, Z+				; ЗАПИСЫВАМ В РЕГИСТРЫ ЗНАЧЕНИЯ ИЗ ТАЙМЕРА
	LD R17, Z+				; ЗАПИСЫВАМ В РЕГИСТРЫ ЗНАЧЕНИЯ ИЗ ТАЙМЕРА

	;СРАВНИВАЕМ ЗНАЧЕНИЯ ТАЙМЕРА С FF, 
	CPI R17, $FF	;СРАВНИВАЕМ ВЕРХНЕЕ ЗНАЧЕНИЕ С FF
	BRNE TP1       	; не равно нулю, значит счет уже идет
	CPI R16, $FF	;СРАВНИВАЕМ НИЖНЕЕ ЗНАЧЕНИЕ С FF
	BRNE TP1			; не равно нулю, значит счет уже идет

	;ИНАЧЕ ЗАПИСЫВАЕМ ПЕРВИЧНОЕ ЗНАЧЕНИЕ СЧЕТЧИКА
	LDI R16, LOW(@1)	; (COUNT)  	;@1
	LDI R17, HIGH(@1)	; (COUNT)  	;@1
TP1:
	SUBI R16,1		; УМЕНЬШАЕМ НИЖНЕЕ ЗНАЧЕНИЕ НА 1
	SBCI R17,0
	BRCS TP3			;Перейти если перенос установлен, СЧЕТ ОКОНЧЕН
	ST -Z, R16
	ST -Z, R17
	RJMP TP4
TP3:		;ОБНУЛЯЕМ СЧЕТЧИК FF
	LDI R16, $FF
	LDI R16, $FF
	ST -Z, R16
	ST -Z, R17
	CBR FLAG_2, (@2); 2	;@2 Сбросить бит (биты) в регистре ФЛАГ ТАЙМЕРА
TP4:
	RET	
.ENDMACRO



;EXEMPLE
;.LISTMAC ; РАЗВОРАЧИВАНИЕ МАКРОСА
;	TIMER_PROC  TIMER_1, COUNT, 2	



;==========================================

;76543210
;||||------- ФЛАГ НАСТУПЛЕНИЯ СОБЫТИЯ "ДВИГАТЕЛЬ РАБОТАЕТ" (PB1)
;|||-------- ФЛАГ НАСТУПЛЕНИЯ СОБЫТИЯ "ВКЛ. ГАБАРИТОВ" (PB2)
;||--------- ФЛАГ НАСТУПЛЕНИЯ СОБЫТИЯ "ВКЛ. РУЧНОГО ТОРМОЗА" (PB3)
;|---------- ФЛАГ НАСТУПЛЕНИЯ СОБЫТИЯ "КНОПКА НАЖАТА" (PB4)		

;00000000	все выключено, режим ожидания сигнала	
;00010000	резерв	
;00100000	не работаем	
;00110000	резерв	
;01000000	не работаем	
;01010000	резерв	
;01100000	не работам	
;01110000	резерв	
;10000000	запуск программы	
;10010000	резерв	
;10100000	отключ. шим	
;10110000	резерв	
;11000000	отключ. шим	
;11010000	резерв	
;11100000	отключ. шим	
;11110000	резерв	

MAIN:
; СРАВНИВАЕМ ФЛАГ СО ЗНАЧЕНИЕМ, ЕСЛИ СОВПАДАЕТ, ДЕЛАЕМ НЕОБХОДИМОЕ ДЕЙСТВИЕ

CPI

TASK1

